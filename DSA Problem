//Given two vwctor arr1[] and arr2[] of size m and n sorted in increasing order.Merge the two array into a single sorted array of size m+n;

#include<iostream>
using namespace std;
int main()
{
    int arr1[]={1,6,7,10};
    int arr2[]={0,1,3,8,11};
    int m=4;
    int n=5;
    int result[m+n];
    int i=0;
    int j=0;
    int k=0;
     while(i<m and j<n)
     {
         if(arr1[i]<arr2[j])
         {
            result[k]=arr1[i];
            k++;
            i++;
         }
         else
         {
           result[k]=arr2[j];
            k++;
            j++;
         }
     }
     while(i<m)
     {
        result[k]=arr1[i];
        i++;
        k++;
     }
     while(j<n)
     {
        result[k]=arr2[j];
        j++;
        k++;
     }
     for(int i=0;i<(m+n);i++)
     {
        cout<<endl<<result[i]<<endl;
     }
     return 0;
}

//More Problem are here
#include<iostream>
#include<vector>
using namespace std;
bool checkPreSufSum(vector<int> &v)
{
    int total_sum=0;
    for(int i=0;i<v.size();i++)
    {
        total_sum+=v[i];
    }
    int prefix_sum=0;
    for(int i=0;i<v.size();i++)
    {
        prefix_sum+=v[i];
        int suffix_sum=total_sum-prefix_sum;
        
        if( suffix_sum==prefix_sum)
        {
            cout<<"The final result is"<<endl;
            return true;
        }
    }
    cout<<"The final result is"<<endl;
    return false;
}
int main()
{
    int n;
    cout<<"Enter the size of an array"<<endl;
    cin>>n;
     vector<int> v;
     for(int i=0;i<=n;i++)
     {
        int ele;
        cin>>ele;
        v.push_back(ele);
     }
     cout<<checkPreSufSum(v);
    return 0;
}
// second problem;
#include<iostream>
#include<vector>
using namespace std;
int main()
{
    int n;
    cout<<"Enter the size of an array"<<endl;
    cin>>n;
     vector<int> v(n+1,0);
     for(int i=1;i<=n;i++)
     {
        cin>>v[i];
     }
  for(int i=1;i<=n;i++)
  {
    v[i]+=v[i-1];
  }
int q;
cout<<"Enter query"<<endl;
cin>>q;
while(q--)
{
    int l,r;
    cin>>l>>r;

    int ans=0;
    ans=v[r]-v[l-1];
    cout<<endl<<ans<<endl;
   }
    return 0;
}
